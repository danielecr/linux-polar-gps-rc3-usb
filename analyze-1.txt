
Analyze:

1st. When device send packet start it always with
0x11
if followed by
0x00 then host reply something
if followed by
0x01 the packet the device has still not finished with the packet, so host do not reply.


I can guess that bulk transfer protocol is:
0x1100 == send a single bulk packet or end of the bulk packet bundle
0x1101 == send a bundle bulk packet (begin or continuing the packet bundle)


5 == 0x0100
0454d40002
6 == 0x0100
0454cb0003

I can guess it is a checksum

0x0454 and 0x0354  as first part occur a number of time
I guess those are little endian ordered 16bit words, say 0x5404 and 0x5403 message for something as acknowledge:
driver understood the kind of message by the 0x03 or 0x04

Every time there is a bulk transfer from device to the host the host reply with 0x54xx schema, or with 0x0701
(I am reordering as little endian here, actually 0x0107). Say, not reordering (real bytes), host reply are:

01000354
01000454
01000554
01000a54
01000107

01000107 message is alway followed by 0s

01000354 messages differ (at most) for two bytes (the firsts 2 following bytes), all other part are zeros.
01000454 messages differ at most for 3 bytes (the following are all zeros)
01000a54 messages differ at most for 9 bytes (again the following are always zeros)
01000554 messages differ at most for 4 bytes

I found it interesting because 03 => 2 bytes, 04 => 3 bytes, 0a => 9 bytes

I guess I can extends this schema to 0x0107 messages:

01000107 messages differ for 0 bytes (do not differ).

